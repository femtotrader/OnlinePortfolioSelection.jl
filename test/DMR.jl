x = [
  0.987548  1.00259   0.990882  1.01593   1.01249   0.995373  1.01202   0.992957  1.00648   1.01832   1.0056    0.996409  0.995195
  0.994709  1.01883   1.00216   1.01014   1.01431   0.998901  1.01766   0.987157  1.00954   1.0028    1.00167   0.996849  0.999458
  0.995093  1.02466   0.999376  1.00788   1.01104   1.00697   1.00664   0.994198  1.00581   1.00869   1.01976   1.00271   1.00104
  0.990278  1.00797   0.995297  1.01609   1.02124   1.00226   1.02136   0.986497  0.995714  1.01253   1.01107   0.993223  1.00357
  0.987861  1.01489   1.00209   0.992191  1.0048    0.990589  1.00432   0.988442  0.996031  1.00855   0.99296   1.01463   0.9976
  1.02963   1.01925   1.0388    1.0492    0.978055  0.993373  1.09769   1.02488   0.963898  0.990338  0.994177  1.07189   1.04086
  0.983994  1.00419   1.01211   1.00188   1.01098   1.00535   1.03135   0.981348  0.993085  1.01368   1.00141   0.994625  1.00875
  0.982032  1.01296   0.995462  1.0196    1.00671   1.0032    1.02081   0.994448  1.00183   1.00479   1.00555   1.00095   0.994404
  0.992166  1.00573   0.999041  1.01344   1.00764   0.99812   1.01713   0.997107  0.995096  1.00711   1.01262   1.00074   1.00017
  0.988145  1.03047   0.984873  1.02573   0.989389  0.980307  1.03      0.999321  1.00112   0.998673  1.0031    0.995407  0.964183
  0.991389  1.00095   0.995969  1.01535   1.00316   0.995971  1.00249   1.00249   0.991233  1.00684   1.00188   0.989192  0.992419
  0.987809  1.00524   0.994441  1.00408   1.00267   0.987506  0.997188  1.01156   1.01913   1.0103    1.00816   1.0082    1.02374
  0.990508  1.00789   0.994295  1.00709   1.00771   0.987252  0.993937  1.00985   1.01202   1.0       0.985884  0.999886  0.991136
  0.988212  1.07325   1.00732   0.990796  1.02748   1.02974   0.889136  1.02754   1.03005   1.01978   0.999118  1.04761   0.971092
  0.998335  0.99347   0.97841   1.00196   1.00891   1.00732   1.00929   0.991126  1.00159   1.0083    1.00105   0.999761  1.00124
  1.00034   1.01824   1.00996   0.992459  0.990982  0.993428  1.00492   1.01367   0.993172  1.01325   1.0134    1.00294   0.982091
  0.984667  1.01173   1.00203   1.01307   1.01048   1.00219   1.00047   0.993037  0.998326  1.00896   1.00442   1.01288   0.994332
  0.997886  1.00135   0.987896  1.0094    1.00884   0.999299  1.00742   0.993444  1.00923   1.01198   1.01138   0.996212  1.01209
  0.994046  0.995808  1.00381   0.997603  1.0026    0.995407  0.996389  1.01027   1.01236   0.994291  1.01623   0.989674  0.99311
  0.993211  1.00767   0.990595  1.00076   1.00298   0.997196  0.994376  1.013     1.00708   0.995035  1.00412   0.983891  0.996423
  0.974565  0.998504  0.996557  0.987526  0.991967  0.977013  1.00655   1.02324   0.983646  1.0129    1.00567   0.997668  1.01591
  0.99832   1.00294   1.01061   0.982477  1.015     0.980912  1.00091   1.00645   0.992327  1.00667   0.976355  0.966744  0.986055
]

n_samples = size(x, 2)
n_assets = size(x, 1)
horizon = 3
alpha = nothing
n = 10
w = 4

@testset "DMR.jl" begin
  @testset "With default arguments" begin
    model = dmr(x, horizon, alpha, n, w)
    @test sum(model.b, dims=1) .|> isapprox(1.) |> all
    @test model.n_assets == n_assets
    @test (model.b[:, 1] .== 1/n_assets) |> all

    model = dmr(x, horizon, [0.00054, 0.00074], n, w)
    @test sum(model.b, dims=1) .|> isapprox(1.) |> all
    @test model.n_assets == n_assets
    @test (model.b[:, 1] .== 1/n_assets) |> all
  end

  @testset "With custom arguments" begin
    model = dmr(x, horizon, alpha, n, w, 0.1)
    @test sum(model.b, dims=1) .|> isapprox(1.) |> all
    @test model.n_assets == n_assets
    @test (model.b[:, 1] .== 1/n_assets) |> all

    model = dmr(x, horizon, [0.00054, 0.00074], n, w, 0.1)
    @test sum(model.b, dims=1) .|> isapprox(1.) |> all
    @test model.n_assets == n_assets
    @test (model.b[:, 1] .== 1/n_assets) |> all
  end

  @testset "With invalid arguments" begin
    @test_throws DomainError dmr(x, 0, alpha, n, w)
    @test_throws DomainError dmr(x, horizon, alpha, 0, w)
    @test_throws DomainError dmr(x, horizon, alpha, n, 0)
    @test_throws DomainError dmr(x, horizon, alpha, n, w, -0.1)
    @test_throws DomainError dmr(x, horizon, alpha, n, w, 1.1)
    @test_throws DimensionMismatch dmr(x, horizon, alpha, (n_assets-n)+n, w)
    @test_throws DimensionMismatch dmr(x, horizon, [0.00054, 0.00074, 0.0001], n, w)
    @test_throws DomainError dmr(x, horizon, [0.00054, -0.00074], n, w)
    @test_throws DomainError dmr(x[:, 1:horizon+w-1-1], horizon, alpha, n, w)
  end
end
